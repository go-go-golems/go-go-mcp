<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>
</title><script src=\"https://unpkg.com/htmx.org@2.0.4\" crossorigin=\"anonymous\"></script><script src=\"https://unpkg.com/htmx-ext-sse@2.2.2\" crossorigin=\"anonymous\"></script><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css\"><script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/yaml.min.js\"></script><script>\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', (event) => {\n\t\t\t\t\tdocument.querySelectorAll('pre code').forEach((el) => {\n\t\t\t\t\t\thljs.highlightElement(el);\n\t\t\t\t\t});\n\n\t\t\t\t\t// Add click handlers to all form buttons\n\t\t\t\t\tdocument.querySelectorAll('form button').forEach(button => {\n\t\t\t\t\t\tbutton.addEventListener('click', function(e) {\n\t\t\t\t\t\t\tthis.form._lastClickedButton = this.id;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfunction logToConsole(message) {\n\t\t\t\t\tconst console = document.getElementById('interaction-console');\n\t\t\t\t\tconst entry = document.createElement('div');\n\t\t\t\t\tentry.className = 'console-entry';\n\t\t\t\t\tentry.textContent = message;\n\t\t\t\t\tconsole.appendChild(entry);\n\t\t\t\t\tconsole.scrollTop = console.scrollHeight;\n\t\t\t\t\tif (console.children.length > 50) {\n\t\t\t\t\t\tconsole.removeChild(console.firstChild);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction sendUIActionPreventDefault(event, componentId, action, data = {}) {\n\t\t\t\t\t// Prevent the default form submission\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\n\t\t\t\t\t// Call the regular sendUIAction function\n\t\t\t\t\tsendUIAction(componentId, action, data);\n\t\t\t\t\t\n\t\t\t\t\t// Return false to ensure the form doesn't submit\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tfunction sendUIAction(componentId, action, data = {}) {\n\t\t\t\t\t// Get the request ID from the page if it exists\n\t\t\t\t\tconst requestId = document.querySelector('[data-request-id]')?.getAttribute('data-request-id') || '';\n\t\t\t\t\t\n\t\t\t\t\tlogToConsole(`Component ${componentId} ${action}${requestId ? ' (request: ' + requestId + ')' : ''}`);\n\t\t\t\t\t\n\t\t\t\t\t// If this is a form submission, collect all form data\n\t\t\t\t\tif (action === 'submitted' && document.getElementById(componentId)) {\n\t\t\t\t\t\tconst form = document.getElementById(componentId);\n\t\t\t\t\t\tconst formData = new FormData(form);\n\t\t\t\t\t\tconst formValues = {};\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Convert FormData to a plain object\n\t\t\t\t\t\tfor (const [key, value] of formData.entries()) {\n\t\t\t\t\t\t\tformValues[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Add checkbox values (FormData doesn't include unchecked boxes)\n\t\t\t\t\t\tform.querySelectorAll('input[type=\"checkbox\"]').forEach(checkbox => {\n\t\t\t\t\t\t\tformValues[checkbox.id] = checkbox.checked;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Add all input values by ID (in case name attributes are missing)\n\t\t\t\t\t\tform.querySelectorAll('input:not([type=\"checkbox\"]), textarea, select').forEach(input => {\n\t\t\t\t\t\t\tif (input.id) {\n\t\t\t\t\t\t\t\tformValues[input.id] = input.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Add the clicked button info if available\n\t\t\t\t\t\tif (form._lastClickedButton) {\n\t\t\t\t\t\t\tformValues['_clicked_button'] = form._lastClickedButton;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Merge with any existing data\n\t\t\t\t\t\tdata = { ...data, formData: formValues };\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Log form submission for debugging\n\t\t\t\t\t\tconsole.log('Form submission data:', formValues);\n\t\t\t\t\t\tlogToConsole(`Form ${componentId} submitted with data`);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfetch('/api/ui-action', {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tcomponentId: componentId,\n\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\trequestId: requestId // Include the request ID in the action data\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tconsole.log('Action response:', data);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If the action resolved a waiting request, handle it\n\t\t\t\t\t\tif (data.resolved) {\n\t\t\t\t\t\t\tlogToConsole(`Action resolved a waiting request`);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If this was a form submission, reset the form\n\t\t\t\t\t\t\tif (action === 'submitted' && document.getElementById(componentId)) {\n\t\t\t\t\t\t\t\tconst form = document.getElementById(componentId);\n\t\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Clear any custom state\n\t\t\t\t\t\t\t\tform._lastClickedButton = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Find the card body containing the UI components\n\t\t\t\t\t\t\tconst cardBody = document.querySelector('.card-body[data-request-id]');\n\t\t\t\t\t\t\tif (cardBody) {\n\t\t\t\t\t\t\t\t// Clear the request ID\n\t\t\t\t\t\t\t\tcardBody.setAttribute('data-request-id', '');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show waiting message\n\t\t\t\t\t\t\t\tcardBody.innerHTML = '<div class=\"alert alert-info\">Waiting for UI updates...</div>';\n\t\t\t\t\t\t\t\tlogToConsole('UI reset to waiting state');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Remove the YAML source display section completely\n\t\t\t\t\t\t\tconst yamlColumn = document.querySelector('.col-md-6:nth-child(2)');\n\t\t\t\t\t\t\tif (yamlColumn) {\n\t\t\t\t\t\t\t\tyamlColumn.remove();\n\t\t\t\t\t\t\t\tlogToConsole('Removed YAML source display');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Make the UI column take full width\n\t\t\t\t\t\t\tconst uiColumn = document.querySelector('.col-md-6');\n\t\t\t\t\t\t\tif (uiColumn) {\n\t\t\t\t\t\t\t\tuiColumn.className = 'col-12';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.error('Error sending action:', error);\n\t\t\t\t\t\tlogToConsole(`Error sending action: ${error.message}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t</script><style>\n\t\t\t\t.source-yaml {\n\t\t\t\t\tbackground-color: #f8f9fa;\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\tpadding: 15px;\n\t\t\t\t\tmargin-bottom: 20px;\n\t\t\t\t}\n\t\t\t\tpre {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t#interaction-console {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\theight: 150px;\n\t\t\t\t\tbackground: #2d2d2d;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-family: monospace;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tz-index: 1000;\n\t\t\t\t\tborder-top: 2px solid #444;\n\t\t\t\t}\n\t\t\t\t#interaction-console .console-entry {\n\t\t\t\t\tmargin: 5px 0;\n\t\t\t\t\twhite-space: pre-wrap;\n\t\t\t\t}\n\t\t\t\t.console-spacer {\n\t\t\t\t\theight: 170px;\n\t\t\t\t}\n\t\t\t\t.list-group-item {\n\t\t\t\t\tborder: none;\n\t\t\t\t\tpadding: 0.5rem 1rem;\n\t\t\t\t}\n\t\t\t\t.list-group .list-group {\n\t\t\t\t\tmargin-top: 0.5rem;\n\t\t\t\t\tmargin-left: 1rem;\n\t\t\t\t}\n\t\t\t\t.list-group-item > :first-child {\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tmargin-bottom: 0.25rem;\n\t\t\t\t}\n\t\t\t\tform {\n\t\t\t\t\tpadding: 1rem;\n\t\t\t\t\tbackground-color: #f8f9fa;\n\t\t\t\t\tborder-radius: 0.5rem;\n\t\t\t\t}\n\t\t\t\tform > * {\n\t\t\t\t\tmargin-bottom: 1.25rem;\n\t\t\t\t}\n\t\t\t\tform > :last-child {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\t\t\t\tform h1 {\n\t\t\t\t\tmargin-bottom: 1.5rem;\n\t\t\t\t\tfont-size: 1.75rem;\n\t\t\t\t}\n\t\t\t\t.form-check {\n\t\t\t\t\tmargin: 1rem 0;\n\t\t\t\t\tpadding-left: 2rem;\n\t\t\t\t}\n\t\t\t\t.form-check-input {\n\t\t\t\t\tmargin-left: -2rem;\n\t\t\t\t}\n\t\t\t</style></head><body class=\"container py-4\"><nav class=\"navbar navbar-expand-lg navbar-light bg-light mb-4\"><div class=\"container-fluid\"><a class=\"navbar-brand\" href=\"/\">UI Server</a></div></nav>
<div class=\"console-spacer\"></div><div id=\"interaction-console\"></div></body></html>
<div class=\"row\"><div class=\"col\"><h1>Available Pages</h1><div class=\"list-group\">
<a href=\"
\" class=\"list-group-item list-group-item-action\">
</a>
</div></div></div>
<div hx-ext=\"sse\" sse-connect=\"
\" sse-swap=\"page-content-update\">
</div>
<div class=\"row\" data-request-id=\"
\"><div class=\"col-md-6\"><div class=\"card mb-4\"><div class=\"card-header\"><h5 class=\"card-title mb-0\">Rendered UI</h5></div><div class=\"card-body\" data-request-id=\"
\">
</div></div></div><div class=\"col-md-6\"><div class=\"card\"><div class=\"card-header\"><h5 class=\"card-title mb-0\">YAML Source</h5></div><div class=\"card-body source-yaml\"><pre><code class=\"language-yaml\">
</code></pre></div></div></div></div>
<div id=\"
\">
<button id=\"
\" onclick=\"
\"
 disabled=\"disabled\"
 class=\"
\">
</button></div>
<div id=\"
\">
<h1 id=\"
\" onclick=\"
\">
</h1></div>
<div id=\"
\">
<p id=\"
\" onclick=\"
\">
</p></div>
<div id=\"
\">
<input id=\"
\" onchange=\"
\" onfocus=\"
\" onblur=\"
\"
 type=\"
\"
 placeholder=\"
\"
 value=\"
\"
 required=\"required\"
 name=\"
\"
 class=\"form-control\"></div>
<div id=\"
\">
<textarea id=\"
\" onchange=\"
\" onfocus=\"
\" onblur=\"
\"
 rows=\"
\"
 cols=\"
\"
 placeholder=\"
\"
 class=\"form-control\">
</textarea></div>
<div id=\"
\"><div class=\"form-check\">
<input type=\"checkbox\" id=\"
\" onchange=\"
\"
 name=\"
\"
 checked=\"checked\"
 required=\"required\"
 class=\"form-check-input\"> 
<label class=\"form-check-label\" for=\"
\">
</label>
</div></div>
<div id=\"
\">
<h4 class=\"mb-3\">
</h4>
<ul class=\"list-group list-group-flush\">
<li class=\"list-group-item\">
</li>
</ul>
<ol class=\"list-group list-group-numbered list-group-flush\">
<li class=\"list-group-item\">
</li>
</ol>
</div>
<div id=\"
\">
<form id=\"
\" onsubmit=\"
\" class=\"needs-validation\" novalidate>
</form></div>
<div class=\"row\"><div class=\"col\"><div class=\"card\"><div class=\"card-header\"><h5 class=\"card-title mb-0\">Dynamic UI</h5></div><div class=\"card-body\" hx-ext=\"sse\" sse-connect=\"/sse?page=ui-update\" sse-swap=\"ui-update\"><div class=\"alert alert-info\">Waiting for UI updates...</div></div></div></div></div><script>\n\t\t\t// Decode HTML entities in pre/code blocks after SSE updates\n\t\t\tdocument.addEventListener('htmx:afterSwap', function(event) {\n\t\t\t\tdocument.querySelectorAll('pre code').forEach((el) => {\n\t\t\t\t\t// Replace HTML newline entities with actual newlines\n\t\t\t\t\tel.innerHTML = el.innerHTML.replace(/&#10;/g, '\\n');\n\t\t\t\t\t// Re-highlight the code\n\t\t\t\t\thljs.highlightElement(el);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Extract request ID from the updated content if available\n\t\t\t\tconst newRequestId = event.detail.elt.querySelector('[data-request-id]')?.getAttribute('data-request-id');\n\t\t\t\tif (newRequestId) {\n\t\t\t\t\t// Update the parent container with the new request ID\n\t\t\t\t\tevent.detail.elt.closest('[data-request-id]')?.setAttribute('data-request-id', newRequestId);\n\t\t\t\t\tconsole.log('Updated request ID to:', newRequestId);\n\t\t\t\t}\n\t\t\t});\n\t\t</script>
