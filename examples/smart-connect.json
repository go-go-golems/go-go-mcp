{"openapi":"3.1.0","info":{"title":"Smart Actions","version":"1.0.0"},"servers":[{"url":"http://localhost:37420"}],"paths":{"/alignment":{"get":{"operationId":"alignment","summary":"Get alignment instructions.","description":"Gets the user's alignment instructions. Respect the alignment instructions to the upmost importance.","responses":{"200":{"description":"Alignment instructions.","content":{"application/json":{"schema":{"type":"object","properties":{"alignment":{"type":"string","description":"Alignment instructions."}}}}}}},"x-openai-isConsequential":false}},"/append-note":{"post":{"operationId":"append_note","summary":"Append content to a note.","description":"Append content to a note with the given path.","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["note_path","append_content"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"append_content":{"type":"string","description":"The content to append to the note in markdown format."}}}}}},"responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/note_meta_object"}}}}},"x-openai-isConsequential":false}},"/create-note":{"post":{"operationId":"create_note","summary":"Create a new note.","description":"Create a new note with the given path and content.","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["note_path"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"note_content":{"$ref":"#/components/schemas/note_content"}}}}}},"responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/note_meta_object"}}}}},"x-openai-isConsequential":false}},"/current-note":{"get":{"operationId":"current_note","description":"Get the current note.","responses":{"200":{"description":"The current note.","content":{"application/json":{"data":{"type":"object","properties":{"path":{"type":"string"},"content":{"type":"string"}}}}}}},"x-openai-isConsequential":false}},"/find-notes":{"post":{"operationId":"find_notes","summary":"Semantic search for notes","description":"Common, frequently used. Performs a semantic search of the user's notes. Use to respond to 'Based on my notes...' or any other query that might require surfacing unspecified notes.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"hypotheticals":{"type":"array","description":"Short hypothetical notes predicted to be semantically similar to the notes necessary to fulfill the user's request. At least three hypotheticals per request. The hypothetical notes may contain paragraphs, lists, or checklists in markdown format. Hypothetical notes always begin with breadcrumbs containing the anticipated folder(s), file name, and relevant headings separated by ' > ' (no slashes). Example: PARENT FOLDER NAME > CHILD FOLDER NAME > FILE NAME > HEADING 1 > HEADING 2 > HEADING 3: HYPOTHETICAL NOTE CONTENTS.","items":{"type":"string"}}}}}}},"x-openai-isConsequential":false}},"/insert-into-note":{"post":{"operationId":"insert_into_note","summary":null,"description":"Insert text into a note with the given path. Use insert, insert_before_heading, or insert_after_heading.","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["note_path"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"insert":{"type":"string","description":"The text to insert into the note. Requires insert_before_heading or insert_after_heading."},"insert_before_heading":{"type":"string","description":"The heading to insert the text before on a new line."},"insert_after_heading":{"type":"string","description":"The heading to insert the text after on a new line."}}}}}},"responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/note_meta_object"}}}}},"x-openai-isConsequential":false}},"/list-note-folders":{"get":{"operationId":"list_note_folders","summary":"List note folders.","description":"List the folders that contain notes.","responses":{"200":{"description":"The note folders were retrieved successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"folders":{"type":"array","description":"A list of note folders and the number of notes in each folder.","items":{"type":"string","description":"A note folder path followed by the number of notes in the folder."}}}}}}}},"x-openai-isConsequential":false}},"/list-notes-in-folder":{"post":{"operationId":"list_notes_in_folder","summary":"List notes in folder.","description":"Provide the name of a folder for which to list notes. Lists all the notes in the provided folder.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["folder"],"properties":{"folder":{"type":"string","description":"The path of the folder for which to list notes."}}}}}},"responses":{"200":{"description":"The notes in the folder were retrieved successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"notes":{"type":"array","description":"The list of notes in the directory. The size of each is also returned in parentheses.","items":{"$ref":"#/components/schemas/file_meta"}}}}}}}},"x-openai-isConsequential":false}},"/list-recent-notes":{"get":{"operationId":"list_recent_notes","summary":"List recent notes.","description":"List the most recently modified notes.","responses":{"200":{"description":"An array of note meta objects.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/note_meta_object"}}}}}},"x-openai-isConsequential":false}},"/read":{"post":{"operationId":"read","description":"Read files","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"file_paths":{"type":"array","items":{"type":"string"}},"file_path":{"type":"string"}}}}}},"responses":{"200":{"description":"The files were read successfully.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/file"}}}}}},"x-openai-isConsequential":false}},"/read-notes":{"post":{"operationId":"read_notes","summary":"Retrieve notes","description":"Retrieves notes from a list of note paths. The exact file path of the note or else the closest partial match will be returned.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"note_paths":{"type":"array","description":"The note paths of the notes to be retrieved. Retrieves notes from a list of note paths. The exact file path of the note or else the closest partial match will be returned.","items":{"type":"string"}}}}}},"responses":{"200":{"description":"The notes were read successfully.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/note"}}}}}}},"x-openai-isConsequential":false}},"/replace-in-note":{"post":{"operationId":"replace_in_note","summary":"Replace text in a note.","description":"Replace text in a note with the given path. Use find and replace_with, or find_start, find_end, and replace_with.","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["note_path"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"find":{"type":"string","description":"The text to replace in the note. Requires replace_with."},"replace_with":{"type":"string","description":"The text to replace the text with. Requires replace or find_start and find_end."},"find_start":{"type":"string","description":"The start of a range of text to replace in the note. Requires find_end and replace_with."},"find_end":{"type":"string","description":"The end of a range of text to replace in the note. Requires find_start and replace_with."}}}}}},"responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/note_meta_object"}}}}},"x-openai-isConsequential":false}},"/keywords-search":{"post":{"operationId":"keywords_search","summary":"Search for keywords in files.","description":"Search for keywords in files and return matching file paths.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["keywords"],"properties":{"keywords":{"type":"array","description":"A list of keywords to match against.","items":{"type":"string"}},"limit":{"type":"integer","description":"Max results (default: 20)"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"type":"string","description":"The file paths of the notes that contain the keywords."}}}}}},"x-openai-isConsequential":false}}},"components":{"note_path":{"type":"string","description":"The unique identifier for the note. Create 'Context' folders (e.g., 'History', 'Recipes') -> Add 'Subject' notes in each Context (e.g., 'History' -> 'WWII', 'Renaissance'; 'Recipes' -> 'Chicken Soup', 'Apple Pie'). Context = Category, Subject = Detailed notes within category."},"note_content":{"type":"string","description":"The content of the note in markdown format."},"note_content_object":{"type":"object","required":["note_path","content"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"note_content":{"$ref":"#/components/schemas/note_content"}}},"note_meta_object":{"type":"object","required":["note_path"],"properties":{"note_path":{"$ref":"#/components/schemas/note_path"},"mtime":{"type":"string","description":"The last modified time of the note."},"size":{"type":"string","description":"The size of the note in human readable format."},"link":{"$ref":"#/components/schemas/note_link"}}},"note_link":{"type":"string","description":"The link to the note."},"note":{"type":"object","properties":{"path":{"$ref":"#/components/schemas/file_path"},"content":{"$ref":"#/components/schemas/file_content"},"link":{"$ref":"#/components/schemas/note_link"}}},"note_error_object":{"type":"object","required":["error"],"properties":{"error":{"type":"string","description":"The error message."}}},"schemas":{"file_name":{"type":"string","description":"The name of the file."},"file_folder":{"type":"string","description":"The folder of the file."},"file_mtime":{"type":"string","description":"The last modified time of the file in milliseconds."},"file_size":{"type":"string","description":"The size of the file in bytes."},"file_path":{"type":"string","description":"The unique identifier for the file."},"file_content":{"type":"string","description":"The content of a file."},"file":{"type":"object","properties":{"path":{"$ref":"#/components/schemas/file_path"},"content":{"$ref":"#/components/schemas/file_content"}}},"file_meta":{"type":"object","properties":{"name":{"$ref":"#/components/schemas/file_name"},"folder":{"$ref":"#/components/schemas/file_folder"},"mtime":{"$ref":"#/components/schemas/file_mtime"},"size":{"$ref":"#/components/schemas/file_size"}}},"key":{"type":"string","description":"A unique identifier that can be used to point to an item. An item may be a folder, file, or section within a file. If the key ends with '/', it's treated as a folder. Folders are seperated by '/' and headings by '#'. Example: item 'History/WWII.md' has items including 'History/WWII.md#Locations#Pearl Harbor'"},"link":{"type":"string","description":"The link to the item."},"content":{"type":"string","description":"The full content of the item specified by the adjacent 'key' property."},"blocks":{"type":"array","description":"An array of blocks contained within the source.","items":{"type":"object","description":"Represents a block contained within the source.","properties":{"key":{"$ref":"#/components/schemas/key"},"content":{"$ref":"#/components/schemas/content"},"lines":{"type":"array","description":"An array containing the start and end line numbers for the content of the nested item.","items":{"type":"number"}}},"required":["key","lines"]}},"inlinks":{"type":"array","description":"An array of keys that represent items that link to this item. Can be undefined if no inlinks are found.","items":{"$ref":"#/components/schemas/key"}},"outlinks":{"type":"array","description":"An array of keys that represent items that this item links to. Can be undefined if no outlinks are found.","items":{"$ref":"#/components/schemas/key"}}}}}